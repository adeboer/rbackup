#!/usr/bin/perl -w

#    rreview - diff rbackup images for review/approval
#
#    Copyright (C) 2006 Anthony de Boer
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License as
#    published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use strict;

my $dir = $ARGV[0];
if (defined($dir) && substr($dir, 0, 1) ne '-') {
	chdir($dir) || die "Cannot cd $dir: $!\n";
	shift @ARGV;
	}

if (-d 'old') {
	chdir('old') || die "Cannot cd into \'old\': $!\n";
	}

my $oldest;
my $newest;

opendir(D, '.') || die "opendir .";
for my $f (readdir(D)) {
	if (-d $f && $f =~ /^\d\d\d\d\d\d\d\d\-\d\d\d\d[\d\-]*$/) {
		$oldest = $f if !defined($oldest) || $f lt $oldest;
		$newest = $f if !defined($newest) || $f gt $newest;
		}
	}

if (!defined($oldest)) {
	print STDERR "No archive directories found.\n";
	exit 1;
	}

my $oldlink = readlink("previous");
if (!defined($oldlink)) {
	print STDERR "No previous version - setting it to $oldest, please run command again.\n";
	symlink($oldest, "previous") || die "Cannot create symlink: $!\n";
	exit(1);
	}

my $newlink = readlink("current");
if (defined($newlink)) {
	if ($newlink eq $oldlink) {
		print STDERR "current and previous point at same revision.\n";
		exit 1;
		}
	}
elsif ($newest eq $oldlink) {
	print STDERR "No new revisions against which to compare.\n";
	exit 1;
	}
else {
	symlink($newest, "current") || die "Cannot create symlink: $!\n";
	}

exec "diff", "-r", @ARGV, "previous", "current";
die "Cannot exec diff: $!\n";
